{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../../services/local-storage-service.service\";\nimport * as i4 from \"@angular/common\";\nfunction ProductListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function ProductListComponent_div_2_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const card_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onCardClick(card_r1));\n    });\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"div\", 7)(4, \"div\", 8);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", card_r1.imageUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(card_r1.title);\n  }\n}\nexport class ProductListComponent {\n  constructor(route, http, localStorageService) {\n    this.route = route;\n    this.http = http;\n    this.localStorageService = localStorageService;\n    this.cards = [];\n  }\n  onCardClick(card) {\n    this.localStorageService.addCard(card);\n  }\n  onClearLocalStorageClick() {\n    this.localStorageService.clearStoredCards();\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.cardId = +params['id']; // Use the + operator to convert the string to an integer\n      // console.log( this.cardId); // This will log the card.id value from the clicked card\n    });\n\n    this.fetchCardsFromApi();\n  }\n  fetchCardsFromApi() {\n    console.log('the clicked category id is : ', this.cardId); // Now you can access the cardId here\n    let params = new HttpParams().set('cardId', this.cardId.toString());\n    this.http.get('http://127.0.0.1:8000/api/products_angular', {\n      params\n    }).pipe(map(data => {\n      // Assuming the API returns an array of cards with 'imageUrl' property\n      // Add 'http://127.0.0.1:8000/storage/' before each image URL\n      return data.map(card => ({\n        ...card,\n        imageUrl: 'http://127.0.0.1:8000/storage/' + card.image\n      }));\n    })).subscribe(data => {\n      this.cards = data; // Assuming the API returns an array of cards\n      console.log('Items:', this.cards); // Add this line to console log the cards\n    }, error => {\n      console.error('Error fetching data from API:', error);\n    });\n  }\n}\nProductListComponent.ɵfac = function ProductListComponent_Factory(t) {\n  return new (t || ProductListComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.LocalStorageService));\n};\nProductListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductListComponent,\n  selectors: [[\"app-product-list\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"row\", 2, \"background-color\", \"rgb(202, 222, 222)\"], [\"class\", \"col-6 ali\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"bg-danger\", \"mb-2\", \"ml-3\", 3, \"click\"], [1, \"col-6\", \"ali\", 3, \"click\"], [1, \"foodd\", \"bg-info\"], [\"alt\", \"\", 1, \"imgg\", 3, \"src\"], [1, \"bg-info\", \"align-items-center\", \"cp-18\"], [1, \"title-9\", \"text-white\"]],\n  template: function ProductListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, ProductListComponent_div_2_Template, 6, 2, \"div\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function ProductListComponent_Template_button_click_3_listener() {\n        return ctx.onClearLocalStorageClick();\n      });\n      i0.ɵɵtext(4, \"Clear Local Storage\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cards);\n    }\n  },\n  dependencies: [i4.NgForOf],\n  styles: [\".imgg[_ngcontent-%COMP%]{\\n    width: 98%;\\n    height: 140px;\\n  }\\n  \\n  .foodd[_ngcontent-%COMP%]{\\n    width: 99%;\\n    height: 170px;\\n    margin: 5px;\\n  }\\n  .ali[_ngcontent-%COMP%]{\\n    height: 190px;\\n\\n  }\\n  \\n  \\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0LWxpc3QvcHJvZHVjdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0lBQ1YsYUFBYTtFQUNmOztFQUVBO0lBQ0UsVUFBVTtJQUNWLGFBQWE7SUFDYixXQUFXO0VBQ2I7RUFDQTtJQUNFLGFBQWE7O0VBRWYiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1nZ3tcclxuICAgIHdpZHRoOiA5OCU7XHJcbiAgICBoZWlnaHQ6IDE0MHB4O1xyXG4gIH1cclxuICBcclxuICAuZm9vZGR7XHJcbiAgICB3aWR0aDogOTklO1xyXG4gICAgaGVpZ2h0OiAxNzBweDtcclxuICAgIG1hcmdpbjogNXB4O1xyXG4gIH1cclxuICAuYWxpe1xyXG4gICAgaGVpZ2h0OiAxOTBweDtcclxuXHJcbiAgfVxyXG4gIFxyXG4gIFxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["HttpParams","map","i0","ɵɵelementStart","ɵɵlistener","ProductListComponent_div_2_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","_r3","card_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","onCardClick","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","imageUrl","ɵɵsanitizeUrl","ɵɵtextInterpolate","title","ProductListComponent","constructor","route","http","localStorageService","cards","card","addCard","onClearLocalStorageClick","clearStoredCards","ngOnInit","params","subscribe","cardId","fetchCardsFromApi","console","log","set","toString","get","pipe","data","image","error","ɵɵdirectiveInject","i1","ActivatedRoute","i2","HttpClient","i3","LocalStorageService","selectors","decls","vars","consts","template","ProductListComponent_Template","rf","ctx","ɵɵtemplate","ProductListComponent_div_2_Template","ProductListComponent_Template_button_click_3_listener"],"sources":["C:\\Users\\Laptop Wala\\Desktop\\Anguler Projects\\myApp\\src\\app\\components\\product-list\\product-list.component.ts","C:\\Users\\Laptop Wala\\Desktop\\Anguler Projects\\myApp\\src\\app\\components\\product-list\\product-list.component.html"],"sourcesContent":["import { Component , OnInit } from '@angular/core';\nimport { HttpClient, HttpParams  } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { LocalStorageService } from '../../services/local-storage-service.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductsService } from 'src/app/services/products.service';\ninterface Card {\n  id: number;\n  name: string;\n  image: string;\n  // Add other properties as needed\n}\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  cards: any[] = [];\n  private cardId!: number; \n  constructor(private route: ActivatedRoute, private http: HttpClient, private localStorageService: LocalStorageService) {}\n \n \n  onCardClick(card: any) {\n    this.localStorageService.addCard(card);\n  }\n \n  onClearLocalStorageClick() {\n    this.localStorageService.clearStoredCards();\n  }\n\n\n  \n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.cardId = +params['id']; // Use the + operator to convert the string to an integer\n      // console.log( this.cardId); // This will log the card.id value from the clicked card\n    });\n    this.fetchCardsFromApi();\n  }\n\n  fetchCardsFromApi(): void {\n    console.log('the clicked category id is : ', this.cardId); // Now you can access the cardId here\n    let params = new HttpParams().set('cardId', this.cardId.toString());\n\n    this.http.get<any>('http://127.0.0.1:8000/api/products_angular', { params }).pipe(\n      map((data) => {\n        // Assuming the API returns an array of cards with 'imageUrl' property\n        // Add 'http://127.0.0.1:8000/storage/' before each image URL\n        return data.map((card: Card) => ({\n          ...card,\n          imageUrl: 'http://127.0.0.1:8000/storage/' + card.image\n        }));\n      })\n    ).subscribe(\n      (data) => {\n        this.cards = data; // Assuming the API returns an array of cards\n        console.log('Items:', this.cards); // Add this line to console log the cards\n\n      },\n      (error) => {\n        console.error('Error fetching data from API:', error);\n      }\n    );\n  }\n\n}\n","\n   \n   <div class=\"container\">   \n    <div class=\"row\" style=\"background-color: rgb(202, 222, 222);\">     \n       <div class=\"col-6 ali\"  *ngFor=\"let card of cards\" (click)=\"onCardClick(card)\">\n         <div class=\"foodd bg-info\">\n             <img [src]=\"card.imageUrl\" alt=\"\" class=\"imgg\" >\n             <div class=\" bg-info align-items-center cp-18\">\n                 <div class=\"title-9 text-white\">{{ card.title }}</div>\n             </div>\n \n         </div>   \n       </div>\n   </div>\n </div>\n <button (click)=\"onClearLocalStorageClick()\" class=\"bg-danger mb-2 ml-3\">Clear Local Storage</button>\n \n \n \n "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}