{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction CardListComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"div\", 7);\n    i0.ɵɵelement(3, \"img\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 9)(5, \"h3\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\");\n    i0.ɵɵtext(12, \"Browse Relevant Products\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const card_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", card_r2.imageUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(card_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Price: \", card_r2.price, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Category: \", card_r2.title, \"\");\n  }\n}\nfunction CardListComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"table\", 12)(3, \"tbody\")(4, \"tr\")(5, \"td\", 13)(6, \"h4\", 14);\n    i0.ɵɵtext(7, \"TITULO\");\n    i0.ɵɵelementEnd()()()()()()();\n  }\n}\nexport class CardListComponent {\n  constructor(http) {\n    this.http = http;\n    this.cards = [];\n  }\n  ngOnInit() {\n    this.fetchCardsFromApi();\n  }\n  fetchCardsFromApi() {\n    // Replace 'YOUR_API_ENDPOINT' with the actual API endpoint URL\n    this.http.get('http://127.0.0.1:8000/api/categories_angular').pipe(map(data => {\n      // Assuming the API returns an array of cards with 'imageUrl' property\n      // Add 'http://127.0.0.1:8000/storage/' before each image URL\n      return data.map(card => ({\n        ...card,\n        imageUrl: 'http://127.0.0.1:8000/storage/' + card.image\n      }));\n    })).subscribe(data => {\n      this.cards = data; // Assuming the API returns an array of cards\n      console.log('Cards:', this.cards); // Add this line to console log the cards\n    }, error => {\n      console.error('Error fetching data from API:', error);\n    });\n  }\n}\nCardListComponent.ɵfac = function CardListComponent_Factory(t) {\n  return new (t || CardListComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nCardListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CardListComponent,\n  selectors: [[\"app-card-list\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"row\"], [\"class\", \" col-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"container\"], [1, \"row\", 2, \"height\", \"100vh\"], [\"class\", \"card col-6 col-sm-4 col-md-3 my-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-6\"], [1, \"card\"], [1, \"card-image\"], [\"alt\", \"Card Image\", 3, \"src\"], [1, \"card-details\"], [1, \"card\", \"col-6\", \"col-sm-4\", \"col-md-3\", \"my-3\"], [1, \"row\", \"h-25\"], [1, \"h-100\", \"w-100\"], [1, \"w-100\", \"col-6\", \"text-center\", \"font-weight-bold\", \"align-middle\"], [1, \"card-title\", \"text-center\", 2, \"font-size\", \"150%\"]],\n  template: function CardListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, CardListComponent_div_1_Template, 13, 4, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵtemplate(4, CardListComponent_div_4_Template, 8, 0, \"div\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cards);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cards);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["map","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","card_r2","imageUrl","ɵɵsanitizeUrl","ɵɵtextInterpolate","name","ɵɵtextInterpolate1","price","title","CardListComponent","constructor","http","cards","ngOnInit","fetchCardsFromApi","get","pipe","data","card","image","subscribe","console","log","error","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","CardListComponent_Template","rf","ctx","ɵɵtemplate","CardListComponent_div_1_Template","CardListComponent_div_4_Template"],"sources":["C:\\Users\\Laptop Wala\\Desktop\\Anguler Projects\\myApp\\src\\app\\components\\card-list\\card-list.component.ts","C:\\Users\\Laptop Wala\\Desktop\\Anguler Projects\\myApp\\src\\app\\components\\card-list\\card-list.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\ninterface Card {\n  id: number;\n  name: string;\n  image: string;\n  // Add other properties as needed\n}\n\n@Component({\n  selector: 'app-card-list',\n  templateUrl: './card-list.component.html',\n  styleUrls: ['./card-list.component.css']\n})\nexport class CardListComponent {\ncards: any[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.fetchCardsFromApi();\n  }\n\n  fetchCardsFromApi(): void {\n    // Replace 'YOUR_API_ENDPOINT' with the actual API endpoint URL\n    this.http.get<any>('http://127.0.0.1:8000/api/categories_angular').pipe(\n      map((data) => {\n        // Assuming the API returns an array of cards with 'imageUrl' property\n        // Add 'http://127.0.0.1:8000/storage/' before each image URL\n        return data.map((card: Card) => ({\n          ...card,\n          imageUrl: 'http://127.0.0.1:8000/storage/' + card.image\n        }));\n      })\n    ).subscribe(\n      (data) => {\n        this.cards = data; // Assuming the API returns an array of cards\n        console.log('Cards:', this.cards); // Add this line to console log the cards\n\n      },\n      (error) => {\n        console.error('Error fetching data from API:', error);\n      }\n    );\n  }\n\n\n}","<div class=\"row\">\n    <div class=\" col-6\" *ngFor=\"let card of cards\">\n      <div class=\"card\">\n        <div class=\"card-image\">\n          <img [src]=\"card.imageUrl\" alt=\"Card Image\">\n        </div>\n        <div class=\"card-details\">\n          <h3>{{ card.name }}</h3>\n          <p>Price: {{ card.price }}</p>\n          <p>Category: {{ card.title }}</p>\n          <button>Browse Relevant Products</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n\n   <div class=\"container\">\n\n   <div class=\"row\" style=\"height: 100vh\">\n    <div class=\"card col-6 col-sm-4 col-md-3 my-3\" *ngFor=\"let card of cards\">\n        <div class=\"row h-25\">\n            <table class=\"h-100 w-100\">\n                <tbody>\n                    <tr>\n                        <td class=\"w-100 col-6 text-center font-weight-bold align-middle\">\n                            <h4 class=\"card-title text-center\" style=\"font-size: 150%\">TITULO</h4>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        \n    </div>\n    \n    \n   \n    \n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}