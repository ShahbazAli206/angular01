{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nexport let CardListComponent = class CardListComponent {\n  constructor(http) {\n    this.http = http;\n    this.cards = [];\n  }\n  ngOnInit() {\n    this.fetchCardsFromApi();\n  }\n  fetchCardsFromApi() {\n    // Replace 'YOUR_API_ENDPOINT' with the actual API endpoint URL\n    this.http.get('http://127.0.0.1:8000/api/categories_angular').pipe(map(data => {\n      // Assuming the API returns an array of cards with 'imageUrl' property\n      // Add 'http://127.0.0.1:8000/storage/' before each image URL\n      return data.map(card, Record);\n      ({\n        ...card,\n        imageUrl: 'http://127.0.0.1:8000/storage/' + card.imageUrl\n      });\n    }));\n  }\n};\nCardListComponent = __decorate([Component({\n  selector: 'app-card-list',\n  templateUrl: './card-list.component.html',\n  styleUrls: ['./card-list.component.css']\n})], CardListComponent);\ndata => {\n  this.cards = data; // Assuming the API returns an array of cards\n}, error => {\n  console.error('Error fetching data from API:', error);\n};\n;","map":{"version":3,"names":["Component","map","CardListComponent","constructor","http","cards","ngOnInit","fetchCardsFromApi","get","pipe","data","card","Record","imageUrl","__decorate","selector","templateUrl","styleUrls","error","console"],"sources":["C:\\Users\\Laptop Wala\\Desktop\\Anguler Projects\\myApp\\src\\app\\components\\card-list\\card-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-card-list',\n  templateUrl: './card-list.component.html',\n  styleUrls: ['./card-list.component.css']\n})\nexport class CardListComponent {\ncards: any[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.fetchCardsFromApi();\n  }\n\n  fetchCardsFromApi(): void {\n    // Replace 'YOUR_API_ENDPOINT' with the actual API endpoint URL\n    this.http.get<any>('http://127.0.0.1:8000/api/categories_angular').pipe(\n      map((data) => {\n        // Assuming the API returns an array of cards with 'imageUrl' property\n        // Add 'http://127.0.0.1:8000/storage/' before each image URL\n        return data.map((card Record<string, unknown>) => ({\n          ...card,\n          imageUrl: 'http://127.0.0.1:8000/storage/' + card.imageUrl\n        }));\n      })\n    ).subscribe(\n      (data) => {\n        this.cards = data; // Assuming the API returns an array of cards\n      },\n      (error) => {\n        console.error('Error fetching data from API:', error);\n      }\n    );\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,GAAG,QAAQ,gBAAgB;AAO7B,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAF1B,KAAAC,KAAK,GAAU,EAAE;EAEwB;EAEvCC,QAAQA,CAAA;IACN,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAEAA,iBAAiBA,CAAA;IACf;IACA,IAAI,CAACH,IAAI,CAACI,GAAG,CAAM,8CAA8C,CAAC,CAACC,IAAI,CACrER,GAAG,CAAES,IAAI,IAAI;MACX;MACA;MACA,OAAOA,IAAI,CAACT,GAAG,CAAEU,IAAI,EAACC,MAAuB,CAAC;MAAI,CAAC;QACjD,GAAGD,IAAI;QACPE,QAAQ,EAAE,gCAAgC,GAAGF,IAAI,CAACE;OACnD;IAAC,CAAC;EACL;CACU;AApBHX,iBAAiB,GAAAY,UAAA,EAL7Bd,SAAS,CAAC;EACTe,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWf,iBAAiB,CAoBd;AACTQ,IAAI,IAAI;EACP,IAAI,CAACL,KAAK,GAAGK,IAAI,CAAC,CAAC;AACrB,CAAC,EACAQ,KAAK,IAAI;EACRC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;AACvD,CAAC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}