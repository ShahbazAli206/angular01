{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nexport let CardListComponent = class CardListComponent {\n  constructor(dataService, http, localStorageService, router) {\n    this.dataService = dataService;\n    this.http = http;\n    this.localStorageService = localStorageService;\n    this.router = router;\n    this.categories = [];\n  }\n  onCardClick(card) {\n    // this.localStorageService.addCard(card);\n    this.router.navigate(['/category', card.id]);\n  }\n  onClearLocalStorageClick() {\n    this.localStorageService.clearStoredCards();\n  }\n  ngOnInit() {\n    this.fetchData();\n    // this.fetchCardsFromApi();\n  }\n\n  fetchData() {\n    this.dataService.getData().subscribe(data => {\n      this.categories = data;\n    }, error => {\n      console.error('Error fetching data:', error);\n    });\n  }\n  fetchCardsFromApi() {\n    this.http.get('http://127.0.0.1:8000/api/categories_angular').pipe(map(data => {\n      return data.map(card => ({\n        ...card,\n        imageUrl: 'http://127.0.0.1:8000/storage/' + card.image\n      }));\n    })).subscribe(data => {\n      this.categories = data;\n      console.log('Categories:', this.categories);\n    }, error => {\n      console.error('Error fetching data from API:', error);\n    });\n  }\n};\nCardListComponent = __decorate([Component({\n  selector: 'app-card-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.css']\n})], CardListComponent);","map":{"version":3,"names":["Component","map","CardListComponent","constructor","dataService","http","localStorageService","router","categories","onCardClick","card","navigate","id","onClearLocalStorageClick","clearStoredCards","ngOnInit","fetchData","getData","subscribe","data","error","console","fetchCardsFromApi","get","pipe","imageUrl","image","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Laptop Wala\\Desktop\\Anguler Projects\\myApp\\src\\app\\components\\category-list\\category-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { LocalStorageService } from '../../services/local-storage-service.service';\nimport { Router } from '@angular/router';\nimport { CategoriesService } from 'src/app/services/categories.service';\ninterface Card {\n  id: number;\n  name: string;\n  image: string;\n  // Add other properties as needed\n}\n\n@Component({\n  selector: 'app-card-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.css']\n})\nexport class CardListComponent implements OnInit {\ncategories: any[] = [];\n\n  constructor(private dataService: DataService, private http: HttpClient, private localStorageService: LocalStorageService, private router: Router) {}\n \n \n  onCardClick(card: any) {\n    // this.localStorageService.addCard(card);\n    this.router.navigate(['/category', card.id]);\n\n  }\n\n  \n  onClearLocalStorageClick() {\n    this.localStorageService.clearStoredCards();\n  }\n\n\n  \n  ngOnInit(): void {\n    this.fetchData();\n\n    // this.fetchCardsFromApi();\n  }\n  fetchData(): void {\n    this.dataService.getData().subscribe(\n      (data) => {\n        this.categories = data;\n      },\n      (error) => {\n        console.error('Error fetching data:', error);\n      }\n    );\n  }\n\n  fetchCardsFromApi(): void {\n    this.http.get<any>('http://127.0.0.1:8000/api/categories_angular').pipe(\n      map((data) => {\n        return data.map((card: Card) => ({\n          ...card,\n          imageUrl: 'http://127.0.0.1:8000/storage/' + card.image\n        }));\n      })\n    ).subscribe(\n      (data) => {\n        this.categories = data;\n        console.log('Categories:', this.categories);\n      },\n      (error) => {\n        console.error('Error fetching data from API:', error);\n      }\n    );\n  }\n\n\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,GAAG,QAAQ,gBAAgB;AAgB7B,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAG5BC,YAAoBC,WAAwB,EAAUC,IAAgB,EAAUC,mBAAwC,EAAUC,MAAc;IAA5H,KAAAH,WAAW,GAAXA,WAAW;IAAuB,KAAAC,IAAI,GAAJA,IAAI;IAAsB,KAAAC,mBAAmB,GAAnBA,mBAAmB;IAA+B,KAAAC,MAAM,GAANA,MAAM;IAF1I,KAAAC,UAAU,GAAU,EAAE;EAE+H;EAGnJC,WAAWA,CAACC,IAAS;IACnB;IACA,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,WAAW,EAAED,IAAI,CAACE,EAAE,CAAC,CAAC;EAE9C;EAGAC,wBAAwBA,CAAA;IACtB,IAAI,CAACP,mBAAmB,CAACQ,gBAAgB,EAAE;EAC7C;EAIAC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,EAAE;IAEhB;EACF;;EACAA,SAASA,CAAA;IACP,IAAI,CAACZ,WAAW,CAACa,OAAO,EAAE,CAACC,SAAS,CACjCC,IAAI,IAAI;MACP,IAAI,CAACX,UAAU,GAAGW,IAAI;IACxB,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CACF;EACH;EAEAE,iBAAiBA,CAAA;IACf,IAAI,CAACjB,IAAI,CAACkB,GAAG,CAAM,8CAA8C,CAAC,CAACC,IAAI,CACrEvB,GAAG,CAAEkB,IAAI,IAAI;MACX,OAAOA,IAAI,CAAClB,GAAG,CAAES,IAAU,KAAM;QAC/B,GAAGA,IAAI;QACPe,QAAQ,EAAE,gCAAgC,GAAGf,IAAI,CAACgB;OACnD,CAAC,CAAC;IACL,CAAC,CAAC,CACH,CAACR,SAAS,CACRC,IAAI,IAAI;MACP,IAAI,CAACX,UAAU,GAAGW,IAAI;MACtBE,OAAO,CAACM,GAAG,CAAC,aAAa,EAAE,IAAI,CAACnB,UAAU,CAAC;IAC7C,CAAC,EACAY,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CACF;EACH;CAGD;AAvDYlB,iBAAiB,GAAA0B,UAAA,EAL7B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACW7B,iBAAiB,CAuD7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}